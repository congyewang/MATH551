p_ii <- pnorm(fit_ii$par)
print(p_ii)
alpha_iii <- seq(-1, -0.1, length = 500)
beta_iii <- seq(0.1, 1, length = 500)
levels <- -c(0:7)
fllh <- matrix(0, nrow = length(alpha_iii), ncol = length(beta_iii))
# Likelihood-Ratio Test
W <- 2 * (negll_seeds_i(fit_i$par, datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10) - negll_seeds_i(c(fit_ii$par, 0), datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10))
W
pvalue <- 1 - pchisq(W, df = 1)
pvalue
# Test alpha using likelihood-ratio test
W_alpha_ratio <- 2 * (
negll_seeds_i(fit_i$par, datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10) -
negll_seeds_i(c(fit_ii$par, fit_i$par[2]), datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10))
cat("W_alpha_ratio:", W_alpha_ratio, "\n")
p_alpha_ratio <- 1 - pchisq(W_alpha_ratio, df=1)
cat("p_alpha_ratio:", p_alpha_ratio, "\n")
# Test alpha using likelihood-ratio test
W_beta_ratio <- 2 * (
negll_seeds_i(fit_i$par, datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10) -
negll_seeds_i(c(fit_i$par[1], 0), datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10))
cat("W_beta_ratio:", W_beta_ratio, "\n")
p_beta_ratio <- 1 - pchisq(W_beta_ratio, df=1)
cat("p_beta_ratio:", p_beta_ratio, "\n")
# Hessian
H <- fit_i$hessian
covar <- solve(H)
# Stand Errors
SEs <- sqrt(diag(covar))
# Wald 95% CIs
ci_alpha <- fit_i$par[1] + 1.96 * c(-1,1) * SEs[1]
ci_beta <- fit_i$par[2] + 1.96 * c(-1,1) * SEs[2]
ci_beta
# Hessian
# H <- fit_i$hessian
H <- hess(negll_seeds_i, fit_i$par, datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10)
H
covar <- solve(H)
# Stand Errors
SEs <- sqrt(diag(covar))
# Wald 95% CIs
ci_alpha <- fit_i$par[1] + 1.96 * c(-1,1) * SEs[1]
ci_beta <- fit_i$par[2] + 1.96 * c(-1,1) * SEs[2]
ci_beta
# Hessian
H <- fit_i$hessian
H
H1 <- hess(negll_seeds_i, fit_i$par, datavec = seeds$Germinated, cov = seeds$Fertiliser, nTrials = 10)
H1
covar <- solve(H)
# Stand Errors
SEs <- sqrt(diag(covar))
# Wald 95% CIs
ci_alpha <- fit_i$par[1] + 1.96 * c(-1,1) * SEs[1]
ci_beta <- fit_i$par[2] + 1.96 * c(-1,1) * SEs[2]
ci_beta
solve(-H)
# Hessian
H <- fit_i$hessian
covar <- solve(H)
# Stand Errors
SEs <- sqrt(diag(covar))
# Wald 95% CIs
ci_alpha <- fit_i$par[1] + 1.96 * c(-1,1) * SEs[1]
ci_beta <- fit_i$par[2] + 1.96 * c(-1,1) * SEs[2]
ci_beta
SEs
fit$par
fit_i$par
fit_i$par[2] - 1.96 * SEs[2]
library(tidyverse)
help(df)
help(do)
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% do(head(., 2))
by_cyl <- mtcars %>% group_by(cyl)
by_cyl %>% do(head(., 1))
by_cyl <- mtcars %>% group_by(cyl)
by_cyl
mtcars
help("head")
library(tidyverse)
setwd("~/R/MATH551/Quiz/Quiz4/")
load("../M551Quiz2018.Rdata")
source("../hessian.R")
caterpillar_negproflik <- function(lambda, data) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
return(-z)
}
fit <- optim(2, pl_lambda, method = "Brent", lower = 2, upper = 50, data = caterpillars)
caterpillar_negproflik <- function(lambda, data) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
return(-z)
}
fit <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars)
caterpillar_negproflik <- function(lambda, data) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
return(-z)
}
fit <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars)
fit
rexp(10, rate = 0.4)
lambda_i<-seq(2,50,len=2000)
pl_lambda<- function(lambda, data,choice=1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
fit <- optim(2, pl_lambda, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1)
lambdahat=fit$par
phat= lambdahat/(mean(caterpillars)+lambdahat)
print(c(lambdahat,phat))
nboot=5000
newlambda <- rep(0,nboot)
newP <- rep(0,nboot)
n <- length(caterpillars)
for (i in 1:nboot){
newdata <- sample(caterpillars,n,replace=T)
lambda_ii<-seq(0.2,200,len=2000)
caterpillar_negproflik<- function(lambda, data) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
return(-z)
}
fit_1 <- optim(2, caterpillar_negproflik, method = "Brent", lower = 0.2, upper = 200, data = newdata)
newlambda[i] <- fit_1$par
newP[i] <- newlambda[i]/(mean(newdata)+newlambda[i])
}
hist(newlambda)
selambda <- sd(newlambda)
seP <- sd(newP)
print(c(selambda,seP))
caterpillar_negproflik <- function(para, data) {
# para[1] = lambda
# para[2] = p
z <- sum(
lfactorial(data + para[1] - 1)
- lfactorial(data)
- lfactorial(para[1] - 1)
+ data * log(1 - para[2])
+ para[1] * log(para[2]))
return(-z)
}
caterpillar_negproflik(c(4, 0.25), caterpillars)
caterpillar_negproflik <- function(para, data) {
# para[1] = lambda
# para[2] = p
z <- sum(
lfactorial(data + para[1] - 1)
- lfactorial(data)
- lfactorial(para[1] - 1)
+ data * log(1 - para[2])
+ para[1] * log(para[2]))
return(-z)
}
fit_i <- optim(c(1, 0.1), caterpillar_negproflik, method = "Nelder-Mead", data = caterpillars, hessian = T)
caterpillar_negproflik <- function(para, data) {
# para[1] = lambda
# para[2] = p
z <- sum(
lfactorial(data + para[1] - 1)
- lfactorial(data)
- lfactorial(para[1] - 1)
+ data * log(1 - para[2])
+ para[1] * log(para[2]))
return(-z)
}
fit_i <- optim(c(1, 0.1), caterpillar_negproflik, method = "Nelder-Mead", data = caterpillars, hessian = T)
fit_i
caterpillar_negproflik <- function(para, data) {
# para[1] = lambda
# para[2] = p
z <- sum(
lfactorial(data + para[1] - 1)
- lfactorial(data)
- lfactorial(para[1] - 1)
+ data * log(1 - para[2])
+ para[1] * log(para[2]))
return(-z)
}
fit_i <- optim(c(1, 0.1), caterpillar_negproflik, method = "Nelder-Mead", data = caterpillars, hessian = T)
lambda_hat <- fit_i$par[1]
p_hat <- fit_i$par[2]
phi_hat <- -fit_i$value
library(tidyverse)
setwd("~/R/MATH551/Quiz/Quiz4/")
load("../M551Quiz2018.Rdata")
source("../hessian.R")
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP <- newLambda / (mean(newCaterpillars) + newLambda)
}
hist(newLambda)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP <- newLambda / (mean(newCaterpillars) + newLambda)
}
newLambda
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP[i] <- newLambda / (mean(newCaterpillars) + newLambda)
}
hist(newLambda)
sample(caterpillars, 100, replace = T)
sample(caterpillars, 1000, replace = T)
length(caterpillars)
sample(caterpillars, 200, replace = T)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
#newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
#newP[i] <- newLambda / (mean(newCaterpillars) + newLambda)
}
hist(newLambda)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
#newP[i] <- newLambda / (mean(newCaterpillars) + newLambda)
}
hist(newLambda)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP[i] <- newLambda[i] / (mean(newCaterpillars) + newLambda[i])
}
hist(newLambda)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP[i] <- newLambda[i] / (mean(newCaterpillars) + newLambda[i])
}
hist(newLambda)
seLambda <- sd(newLambda)
seP <- sd(newP)
print(seLambda, seP)
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP[i] <- newLambda[i] / (mean(newCaterpillars) + newLambda[i])
}
hist(newLambda)
seLambda <- sd(newLambda)
seP <- sd(newP)
print(c(seLambda, seP))
caterpillar_negproflik <- function(lambda, data, choice = 1) {
z <- sum(
log(
(factorial(data + lambda - 1) / (factorial(data) * factorial(lambda - 1))) * ((1 - lambda / (mean(data) + lambda))^data) * ((lambda / (mean(data) + lambda))^lambda)
)
)
if (choice > 0) {
return(z)
}
else{
return(-z)
}
}
set.seed(4321^2)
fit_i <- optim(1, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = caterpillars, choice = -1, hessian = TRUE)
lambda_i <- fit_i$par
p_hat_i <- lambda_i / (mean(caterpillars) + lambda_i)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
newLambda[i] <- optim(2, caterpillar_negproflik, method = "Brent", lower = 2, upper = 50, data = newCaterpillars, choice = -1, hessian = TRUE)$par
newP[i] <- newLambda[i] / (mean(newCaterpillars) + newLambda[i])
}
# hist(newLambda)
seLambda <- sd(newLambda)
seP <- sd(newP)
print(c(seLambda, seP))
ciLambda <- quantile(newLambda, c(0.025, 0.975))
ciP <- quantile(newP, c(0.025, 0.975))
print(ciLambda)
print(ciP)
uniform.loglik <- function(para, data) {
# para[1] = lambda
# para[2] = p
z <- sum(
lfactorial(data + para[1] - 1)
- lfactorial(data)
- lfactorial(para[1] - 1)
+ data * log(1 - para[2])
+ para[1] * log(para[2]))
return(z)
}
set.seed(4321^2)
fit_test_i <- optim(c(1, 0.1), uniform.loglik,  method = "Nelder-Mead", data = caterpillars)
nboot <- 1000
newLambda <- rep(0, nboot)
newP <- rep(0, nboot)
n <- length(caterpillars)
for (i in 1:nboot) {
newCaterpillars <- sample(caterpillars, n, replace = T)
fit_test_i <- optim(c(1, 0.1), uniform.loglik,  method = "Nelder-Mead", data = caterpillars)
newLambda[i] <- fit_test_i [1]
newP[i] <- fit_test_i [2]
}
